https://imgur.com/jcOoC2T

For every additional element, why you are adding it : 
Adding a load balancer (such as HAProxy) and another server to a simple web infrastructure introduces several benefits, particularly in terms of improving performance, scalability, and high availability.

What distribution algorithm your load balancer is configured with and how it works ?
in this structure the load balancer uses the commmon algorithm call Round Robin, it works distributing servers across available servers e.g request one goes to server 1 , request 2 goes to server 2 and so forth

Is your load-balancer enabling an Active-Active or Active-Passive setup, explain the difference between both.
--- yes, the structure enables both .
--- in an active-passive,one server A is used,the load balancer notices a fail in Server A and passes request to server B , an active-active spreads request across all available servers 

How a database Primary-Replica (Master-Slave) cluster works :
--- A primary-replica cluster works in a way that the primary server is responsible for reading and writing to the database. The replicas otherwise called slaves are responsible for updating the database information that was written by the primary server.

What is the difference between the Primary node and the Replica node in regard to the application
--- One difference between the two is in terms of operation, the primary server writes to the database while the replica takes the information written and updates it to the database

In the two server infrastructure, the issues that abound are:

SPOF - The web infrastructure has only one load-balancing algorithm implemented and has lesser fault tolerance
Another is the number of servers, the least connection algorithm works best when there are multiple serves so that at any point in time, one server would have less requests being served. However in this implementation, there are only two servers andthere is every possibility that both have the same amount of requests and this would lead to downtime as incoming requests would have to be put on hold till other requests have been served

The web infrastructure also does not have a firewall implemented and as such, data breaches, and malicious sites have easy access to both the server and the client

The infrastructure does not have monitoring implemented and if there is too much workload on one server, it cannot be tracked. Also, other vital information cannot be retrived.